 int uniquePathsWithObstacles(vector<vector<int>>& v) {
        if(!v.size())
            return 0;
        if(v[0][0]==1 || v[v.size()-1][v[0].size()-1]==1)
            return 0;
        for(int i=0;i<v.size();i++)
        {
            for(int j=0;j<v[0].size();j++)
            {
                if(v[i][j]==0)
                    v[i][j]=1;
                else
                    v[i][j]=0;
            }
        }
        for(int i=0;i<v[0].size();i++)
        {
            if(v[0][i]==0)
            {
               while(i<v[0].size())
               {
                   v[0][i]=0;
                   i++;
               }
                break;
            }
        }
        for(int i=0;i<v.size();i++)
        {
            if(v[i][0]==0)
            {
               while(i<v.size())
               {
                   v[i][0]=0;
                   i++;
               }
                break;
            }
        }
        for(int i=1;i<v.size();i++)
        {
          for(int j=1;j<v[0].size();j++)
          {
              if(v[i][j]!=0 && (v[i-1][j]!=0 || v[i][j-1]!=0))
              {
                  v[i][j]=v[i-1][j]+v[i][j-1];
              }
              else
                  v[i][j]=0;
             // cout<<v[i][j]<<" ";
          }
           // cout<<"\n";
        }
        return v[v.size()-1][v[0].size()-1];
    }