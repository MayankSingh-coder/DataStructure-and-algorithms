 int rob(vector<int>& v)
    {
        int n=v.size();
       // int dp[n+1];
        if(!n)
            return 0;
        else if(n==1)
            return v[0];
        else if(n==2)
        {
            return max(v[0],v[1]);
            
        }
        else if(n==3)
        {
            return max(v[0],max(v[1],v[2]));
        }
        else if(n==4)
        {
            return max(v[0]+v[2],v[1]+v[3]);
        }
        else
        {
           int p1=find(v,0,n-1);
            int p2=find(v,1,n);
           // cout<<p1<<" "<<p2<<"\n";
            return max(p1,p2);
        
        }
        return 0;
    }
    int find(vector<int>& v,int i,int n)
    {
         int out=v[i];
        int in=max(v[i],v[i+1]);
        for(int k=i+2;k<n;k++)
        {
            int maxx=max(in,out+v[k]);
            out=in;
            in=maxx;
        }
       // cout<<in<<"\n";
        return in;
    }